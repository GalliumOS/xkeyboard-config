

















default partial alphanumeric_keys
xkb_symbols "basic" {





 include "us"

 name[Group1]="Romanian";

 key <AE01> { [ 1, exclam, dead_tilde ] };
 key <AE02> { [ 2, at, dead_caron ] };
 key <AE03> { [ 3, numbersign, dead_circumflex ] };
 key <AE04> { [ 4, dollar, dead_breve ] };
 key <AE05> { [ 5, percent, dead_abovering ] };
 key <AE06> { [ 6, asciicircum, dead_ogonek ] };
 key <AE07> { [ 7, ampersand, dead_grave ] };
 key <AE08> { [ 8, asterisk, dead_abovedot ] };
 key <AE09> { [ 9, parenleft, dead_acute ] };
 key <AE10> { [ 0, parenright, dead_doubleacute ] };
 key <AE11> { [ minus, underscore, dead_diaeresis, endash ] };
 key <AE12> { [ equal, plus, dead_cedilla, plusminus ] };
 key <AD01> { [ q, Q, acircumflex, Acircumflex ] };
 key <AD02> { [ w, W, ssharp ] };
 key <AD03> { [ e, E, EuroSign ] };
 key <AD05> { [ t, T, 0x100021b, 0x100021a ] };
 key <AD08> { [ i, I, icircumflex, Icircumflex ] };
 key <AD10> { [ p, P, section ] };
 key <AD11> { [ bracketleft, braceleft, doublelowquotemark ] };
 key <AD12> { [ bracketright, braceright, rightdoublequotemark ] };
 key <AC01> { [ a, A, abreve, Abreve ] };
 key <AC02> { [ s, S, 0x1000219, 0x1000218 ] };
 key <AC03> { [ d, D, dstroke, Dstroke ] };
 key <AC09> { [ l, L, lstroke, Lstroke ] };
 key <LSGT> { [ backslash, bar ] };
 key <AB03> { [ c, C, copyright ] };
 key <AB08> { [ comma, less, guillemotleft ] };
 key <AB09> { [ period, greater, guillemotright ] };

 include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "cedilla" {
 
 
 

 include "ro(basic)"

 name[Group1]="Romanian (cedilla)";

 key <AD05> { [ t, T, tcedilla, Tcedilla ] };
 key <AC02> { [ s, S, scedilla, Scedilla ] };
};

partial alphanumeric_keys
xkb_symbols "std" {
 
 
 
 

 include "us"

 name[Group1]="Romanian (standard)";

 key <TLDE> { [ doublelowquotemark, rightdoublequotemark, grave, asciitilde ] };
 key <AE01> { [ 1, exclam, dead_tilde ] };
 key <AE02> { [ 2, at, dead_caron ] };
 key <AE03> { [ 3, numbersign, dead_circumflex ] };
 key <AE04> { [ 4, dollar, dead_breve ] };
 key <AE05> { [ 5, percent, dead_abovering ] };
 key <AE06> { [ 6, asciicircum, dead_ogonek ] };
 key <AE07> { [ 7, ampersand, dead_grave ] };
 key <AE08> { [ 8, asterisk, dead_abovedot ] };
 key <AE09> { [ 9, parenleft, dead_acute ] };
 key <AE10> { [ 0, parenright, dead_doubleacute ] };
 key <AE11> { [ minus, underscore, dead_diaeresis, endash ] };
 key <AE12> { [ equal, plus, dead_cedilla, plusminus ] };
 key <AD03> { [ e, E, EuroSign ] };
 key <AD10> { [ p, P, section ] };
 key <AD11> { [ abreve, Abreve, bracketleft, braceleft ] };
 key <AD12> { [ icircumflex, Icircumflex, bracketright, braceright ] };
 key <BKSL> { [ acircumflex, Acircumflex, backslash, bar ] };
 key <AC02> { [ s, S, ssharp ] };
 key <AC03> { [ d, D, dstroke, Dstroke ] };
 key <AC09> { [ l, L, lstroke, Lstroke ] };
 key <AC10> { [ 0x1000219, 0x1000218, semicolon, colon ] };
 key <AC11> { [ 0x100021b, 0x100021a, apostrophe, quotedbl ] };
 key <LSGT> { [ backslash, bar ] };
 key <AB03> { [ c, C, copyright ] };
 key <AB08> { [ comma, semicolon, less, guillemotleft ] };
 key <AB09> { [ period, colon, greater, guillemotright ] };

 key <KPDL> { [ KP_Delete, KP_Separator ] };

 include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "std_cedilla" {
 
 
 

 include "ro(std)"

 name[Group1]="Romanian (standard cedilla)";

 key <AC10> { [ scedilla, Scedilla ] };
 key <AC11> { [ tcedilla, Tcedilla ] };
};


partial alphanumeric_keys
xkb_symbols "winkeys" {
 
 
 

 include "latin"

 name[Group1]="Romanian (WinKeys)";

 key <TLDE> { [ bracketright, bracketleft ] };

 key <AE01> { [ 1, exclam, asciitilde, asciitilde ] };
 key <AE02> { [ 2, quotedbl, at, at ] };
 key <AE03> { [ 3, numbersign, asciicircum,asciicircum ] };
 key <AE04> { [ 4, currency ] };
 key <AE05> { [ 5, percent, degree, degree ] };
 key <AE06> { [ 6, ampersand ] };
 key <AE07> { [ 7, slash, grave, grave ] };
 key <AE08> { [ 8, parenleft ] };
 key <AE09> { [ 9, parenright ] };
 key <AE10> { [ 0, equal ] };
 key <AE11> { [ plus, question ] };
 key <AE12> { [ apostrophe, asterisk ] };

 key <AD01> { [ q, Q, backslash, backslash ] };
 key <AD02> { [ w, W, bar, bar ] };
 key <AD03> { [ e, E, EuroSign, EuroSign ] };
 key <AD05> { [ t, T ] };
 key <AD06> { [ z, Z ] };
 key <AD07> { [ u, U ] };
 key <AD08> { [ i, I ] };
 key <AD11> { [ abreve, Abreve, division, division ] };
 key <AD12> { [ icircumflex, Icircumflex, multiply, multiply ] };

 key <AC04> { [ f, F ] };
 key <AC05> { [ g, G ] };
 key <AC10> { [ scedilla, Scedilla, dollar, dollar ] };
 key <AC11> { [ tcedilla, Tcedilla, ssharp, ssharp ] };

 key <AB01> { [ y, Y ] };
 key <AB05> { [ b, B, braceleft, braceleft ] };
 key <AB06> { [ n, N, braceright, braceright ] };
 key <AB07> { [ m, M, section, section ] };
 key <AB08> { [ comma, semicolon, less, less ] };
 key <AB09> { [ period, colon, greater, greater ] };
 key <AB10> { [ minus, underscore ] };

 key <BKSL> { [ acircumflex, Acircumflex ] };

 include "kpdl(comma)"

 include "level3(ralt_switch)"
};

partial
xkb_symbols "crh_dobruja" {
 
 
 
 
 

 include "tr(crh)"

 name[Group1]="Crimean Tatar (Dobruja Q)";

 key <AD02> { [ w, W, abreve, Abreve ] };
 key <AD05> { [ t, T, 0x100021b, 0x100021a ] };
 key <AD10> { [ p, P, section ] };
 key <AC02> { [ s, S, 0x1000219, 0x1000218 ] };
 key <AC07> { [ ibreve, Ibreve, j, J ] };
 key <AB07> { [ m, M, trademark, masculine ] };
};



partial alphanumeric_keys
xkb_symbols "ergonomic" {
 
 
 
 
 

 include "ro(basic)"

 name[Group1]="Romanian (ergonomic Touchtype)";

 key <AD01> { [ abreve, Abreve, q, Q ] };
 key <AD02> { [ 0x1000219, 0x1000218, w, W ] };
 key <AD06> { [ 0x100021b, 0x100021a, y, Y ] };
 key <AC01> { [ a, A, acircumflex, Acircumflex ] };
 key <AC08> { [ icircumflex, Icircumflex, k, K ] };
};


partial alphanumeric_keys
 xkb_symbols "sun_type6" {
 include "sun_vndr/ro(sun_type6)"
};
