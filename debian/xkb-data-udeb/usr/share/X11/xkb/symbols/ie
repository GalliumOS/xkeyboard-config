























default partial alphanumeric_keys
xkb_symbols "basic" {

 
 
 
 
 
 

 name[Group1] = "Irish";

 
 
 
 key <TLDE> { [ grave, notsign, brokenbar, NoSymbol ] };
 key <AE01> { [ 1, exclam, exclamdown, onesuperior ] };
 key <AE02> { [ 2, quotedbl, trademark, twosuperior ] };
 key <AE03> { [ 3, sterling, copyright, threesuperior ] };
 key <AE04> { [ 4, dollar, EuroSign, cent ] };
 key <AE05> { [ 5, percent, section, dagger ] };
 key <AE06> { [ 6, asciicircum, dead_circumflex, 0x1002030 ] };
 
 key <AE07> { [ 7, ampersand, paragraph, 0x100204A ] };
 
 key <AE08> { [ 8, asterisk, dead_diaeresis, enfilledcircbullet ] };
 key <AE09> { [ 9, parenleft, ordfeminine, periodcentered ] };
 key <AE10> { [ 0, parenright, masculine, degree ] };
 key <AE11> { [ minus, underscore, endash, emdash ] };
 key <AE12> { [ equal, plus, notequal, plusminus ] };

 
 
 
 key <AD01> { [ q, Q, oe, OE ] };
 key <AD02> { [ w, W, dead_abovedot, dead_abovedot ] };
 key <AD03> { [ e, E, eacute, Eacute ] };
 key <AD04> { [ r, R, registered, 0x1002030 ] };
 
 key <AD05> { [ t, T, thorn, THORN ] };
 key <AD06> { [ y, Y, yen, mu ] };
 key <AD07> { [ u, U, uacute, Uacute ] };
 key <AD08> { [ i, I, iacute, Iacute ] };
 key <AD09> { [ o, O, oacute, Oacute ] };
 key <AD10> { [ p, P, singlelowquotemark, NoSymbol ] };
 key <AD11> { [ bracketleft, braceleft, leftdoublequotemark, rightdoublequotemark ] };
 key <AD12> { [ bracketright, braceright, leftsinglequotemark, rightsinglequotemark ] };

 
 
 
 key <AC01> { [ a, A, aacute, Aacute ] };
 key <AC02> { [ s, S, ssharp, NoSymbol ] };
 key <AC03> { [ d, D, eth, ETH ] };
 key <AC04> { [ f, F, 0x1000192, NoSymbol ] };
 
 key <AC05> { [ g, G, copyright, NoSymbol ] };
 key <AC06> { [ h, H, dead_abovedot, dead_abovedot ] };
 key <AC07> { [ j, J, idotless, onequarter ] };
 key <AC08> { [ k, K, dead_abovering, onehalf ] };
 key <AC09> { [ l, L, acute, threequarters ] };
 key <AC10> { [ semicolon, colon, ellipsis, doubledagger ] };
 key <AC11> { [ apostrophe, at, ae, AE ] };
 key <BKSL> { [ numbersign, asciitilde, guillemotleft, guillemotright ] };


 
 
 
 key <LSGT> { [ backslash, bar, dead_grave, dead_acute ] };
 key <AB01> { [ z, Z, leftanglebracket, rightanglebracket ] };
 key <AB02> { [ x, X, multiply, approximate ] };
 key <AB03> { [ c, C, dead_cedilla, cedilla ] };
 key <AB04> { [ v, V, dead_caron, NoSymbol ] };
 key <AB05> { [ b, B, diaeresis, NoSymbol ] };
 key <AB06> { [ n, N, dead_tilde, NoSymbol ] };
 key <AB07> { [ m, M, macron, NoSymbol ] };
 key <AB08> { [ comma, less, lessthanequal, doublelowquotemark ] };
 key <AB09> { [ period, greater, greaterthanequal, singlelowquotemark ] };
 key <AB10> { [ slash, question, division, questiondown ] };


 key <SPCE> { [ space, space, nobreakspace, nobreakspace ] };

 include "level3(ralt_switch)"

 
 

 include "compose(rwin)"
};

partial alphanumeric_keys
xkb_symbols "CloGaelach" {

 
 
 
 
 
 
 
 
 
 

 include "ie(basic)"

 name[Group1] = "CloGaelach";

 key <TLDE> { [ grave, notsign, brokenbar, ssharp ] };
 key <AD04> { [ r, R, 0x100027C, registered ] };
 
 key <AD05> { [ t, T, tabovedot, Tabovedot ] };
 key <AD10> { [ p, P, pabovedot, Pabovedot ] };

 key <AC02> { [ s, S, sabovedot, Sabovedot ] };
 key <AC03> { [ d, D, dabovedot, Dabovedot ] };
 key <AC04> { [ f, F, fabovedot, Fabovedot ] };
 key <AC05> { [ g, G, gabovedot, Gabovedot ] };

 key <AB01> { [ z, Z, 0x100017F, 0x1001E9B ] };
 
 key <AB03> { [ c, C, cabovedot, Cabovedot ] };
 key <AB05> { [ b, B, babovedot, Babovedot ] };
 key <AB07> { [ m, M, mabovedot, Mabovedot ] };

 key <LSGT> { [ backslash, bar, dead_grave, dead_cedilla ] };
};

partial alphanumeric_keys
xkb_symbols "UnicodeExpert" {



 name[Group1] = "Irish (UnicodeExpert)";

 
 
 
 key <TLDE> { [ grave, notsign, 0x10000A6, 0x10000A6 ] };
 
 key <AE01> { [ 1, exclam, NoSymbol, NoSymbol ] };
 key <AE02> { [ 2, quotedbl, dead_doubleacute, dead_doubleacute ] };
 key <AE03> { [ 3, sterling, NoSymbol, NoSymbol ] };
 key <AE04> { [ 4, dollar, EuroSign, EuroSign ] };
 key <AE05> { [ 5, percent, NoSymbol, NoSymbol ] };
 key <AE06> { [ 6, asciicircum, dead_circumflex, dead_circumflex ] };
 key <AE07> { [ 7, ampersand, 0x100204A, 0x100204A ] };
 
 key <AE08> { [ 8, asterisk, dead_abovering, dead_abovering ] };
 key <AE09> { [ 9, parenleft, dead_breve, dead_breve ] };
 key <AE10> { [ 0, parenright, dead_ogonek, dead_ogonek ] };
 key <AE11> { [ minus, underscore, dead_macron, dead_macron ] };
 key <AE12> { [ equal, plus, NoSymbol, NoSymbol ] };

 
 
 
 key <AD01> { [ q, Q, NoSymbol, NoSymbol ] };
 key <AD02> { [ w, W, NoSymbol, NoSymbol ] };
 key <AD03> { [ e, E, eacute, Eacute ] };
 key <AD04> { [ r, R, 0x100027C, 0x100027C ] };
 
 key <AD05> { [ t, T, NoSymbol, NoSymbol ] };
 key <AD06> { [ y, Y, NoSymbol, NoSymbol ] };
 key <AD07> { [ u, U, uacute, Uacute ] };
 key <AD08> { [ i, I, iacute, Iacute ] };
 key <AD09> { [ o, O, oacute, Oacute ] };
 key <AD10> { [ p, P, NoSymbol, NoSymbol ] };
 key <AD11> { [ bracketleft, braceleft, dead_hook, dead_hook ] };
 key <AD12> { [ bracketright, braceright, dead_horn, dead_horn ] };

 
 
 
 key <AC01> { [ a, A, aacute, Aacute ] };
 key <AC02> { [ s, S, NoSymbol, NoSymbol ] };
 key <AC03> { [ d, D, NoSymbol, NoSymbol ] };
 key <AC04> { [ f, F, NoSymbol, NoSymbol ] };
 key <AC05> { [ g, G, NoSymbol, NoSymbol ] };
 key <AC06> { [ h, H, dead_abovedot, dead_abovedot ] };
 key <AC07> { [ j, J, NoSymbol, NoSymbol ] };
 key <AC08> { [ k, K, NoSymbol, NoSymbol ] };
 key <AC09> { [ l, L, NoSymbol, NoSymbol ] };
 key <AC10> { [ semicolon, colon, dead_diaeresis, dead_diaeresis ] };
 key <AC11> { [ apostrophe, at, dead_acute, dead_acute ] };
 key <BKSL> { [ numbersign, asciitilde, dead_tilde, dead_tilde ] };

 
 
 
 key <LSGT> { [ backslash, bar, dead_grave, dead_grave ] };
 key <AB01> { [ z, Z, 0x100017F, 0x1001E9B ] };
 
 key <AB02> { [ x, X, NoSymbol, NoSymbol ] };
 key <AB03> { [ c, C, NoSymbol, NoSymbol ] };
 key <AB04> { [ v, V, dead_caron, dead_caron ] };
 key <AB05> { [ b, B, NoSymbol, NoSymbol ] };
 key <AB06> { [ n, N, NoSymbol, NoSymbol ] };
 key <AB07> { [ m, M, NoSymbol, NoSymbol ] };
 key <AB08> { [ comma, less, dead_cedilla, dead_cedilla ] };
 key <AB09> { [ period, greater, dead_abovedot, dead_abovedot ] };
 key <AB10> { [ slash, question, dead_belowdot, dead_belowdot ] };

 key <SPCE> { [ space, space, space, nobreakspace ] };

 include "level3(ralt_switch)"

 include "compose(rwin)"
};











partial alphanumeric_keys
xkb_symbols "ogam" {

 name[Group1] = "Ogham";

 key.type[Group1] = "ONE_LEVEL";

 key <LSGT> { type[Group1]="TWO_LEVEL",
 [ 0x100169B, 0x100169C ] };
 

 key <BKSL> { [ 0x1001680 ] }; 

 key <TLDE> { [ 0x100169C ] }; 

 key <SPCE> { [ space ] };

 
 
 
 key <AD01> { [ 0x100168A ] }; 
 key <AD02> { [ 0x1001695 ] }; 
 key <AD03> { [ 0x1001693 ] }; 
 key <AD04> { [ 0x100168F ] }; 
 key <AD05> { [ 0x1001688 ] }; 
 key <AD06> { [ 0x1001698 ] }; 
 key <AD07> { [ 0x1001692 ] }; 
 key <AD08> { [ 0x1001694 ] }; 
 key <AD09> { [ 0x1001691 ] }; 
 key <AD10> { [ 0x100169A ] }; 

 
 
 
 key <AC01> { [ 0x1001690 ] }; 
 key <AC02> { [ 0x1001684 ] }; 
 key <AC03> { [ 0x1001687 ] }; 
 key <AC04> { [ 0x1001683 ] }; 
 key <AC05> { [ 0x100168C ] }; 
 key <AC06> { [ 0x1001686 ] }; 
 key <AC07> { [ 0x1001697 ] }; 
 key <AC08> { [ 0x1001696 ] }; 
 key <AC09> { [ 0x1001682 ] }; 

 
 
 
 key <AB01> { [ 0x100168E ] }; 
 key <AB02> { [ 0x1001699 ] }; 
 key <AB03> { [ 0x1001689 ] }; 
 key <AB04> { [ 0x100168D ] }; 
 key <AB05> { [ 0x1001681 ] }; 
 key <AB06> { [ 0x1001685 ] }; 
 key <AB07> { [ 0x100168B ] }; 

 
 
 
 key <AB08> { [ 0x100169C ] }; 
 key <AB09> { [ 0x100169B ] }; 
 key <AB10> { [ 0x1001680 ] }; 

 include "compose(rwin)"
};

partial alphanumeric_keys
xkb_symbols "ogam_is434" {

 
 

 name[Group1] = "Ogham (IS434)";

 key.type[Group1] = "THREE_LEVEL";

 key <LSGT> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
 [ backslash, bar, 0x100169B, 0x100169C ] };
 

 key <BKSL> { [ numbersign, asciitilde, 0x1001680 ] }; 
 key <TLDE> { [ grave, notsign, 0x100169C ] }; 
 key <SPCE> { [ space, space, space ] };

 
 
 
 key <AE01> { type[Group1]="TWO_LEVEL", [ 1, exclam ] };
 key <AE02> { type[Group1]="TWO_LEVEL", [ 2, quotedbl ] };
 key <AE03> { type[Group1]="TWO_LEVEL", [ 3, sterling ] };
 key <AE04> { [ 4, dollar, EuroSign ] };
 key <AE05> { type[Group1]="TWO_LEVEL", [ 5, percent ] };
 key <AE06> { type[Group1]="TWO_LEVEL", [ 6, asciicircum ] };
 key <AE07> { [ 7, ampersand, 0x100204A ] }; 
 key <AE08> { type[Group1]="TWO_LEVEL", [ 8, asterisk ] };
 key <AE09> { type[Group1]="TWO_LEVEL", [ 9, parenleft ] };
 key <AE10> { type[Group1]="TWO_LEVEL", [ 0, parenright ] };
 key <AE11> { type[Group1]="TWO_LEVEL", [ minus, underscore ] };
 key <AE12> { type[Group1]="TWO_LEVEL", [ equal, plus ] };

 
 
 
 key <AD01> { [ q, Q, 0x100168A ] }; 
 key <AD02> { [ w, W, 0x1001695 ] }; 
 key <AD03> { [ e, E, 0x1001693 ] }; 
 key <AD04> { [ r, R, 0x100168F ] }; 
 key <AD05> { [ t, T, 0x1001688 ] }; 
 key <AD06> { [ y, Y, 0x1001698 ] }; 
 key <AD07> { [ u, U, 0x1001692 ] }; 
 key <AD08> { [ i, I, 0x1001694 ] }; 
 key <AD09> { [ o, O, 0x1001691 ] }; 
 key <AD10> { [ p, P, 0x100169A ] }; 

 
 
 
 key <AC01> { [ a, A, 0x1001690 ] }; 
 key <AC02> { [ s, S, 0x1001684 ] }; 
 key <AC03> { [ d, D, 0x1001687 ] }; 
 key <AC04> { [ f, F, 0x1001683 ] }; 
 key <AC05> { [ g, G, 0x100168C ] }; 
 key <AC06> { [ h, H, 0x1001686 ] }; 
 key <AC07> { [ j, J, 0x1001697 ] }; 
 key <AC08> { [ k, K, 0x1001696 ] }; 
 key <AC09> { [ l, L, 0x1001682 ] }; 

 
 
 
 key <AB01> { [ z, Z, 0x100168E ] }; 
 key <AB02> { [ x, X, 0x1001699 ] }; 
 key <AB03> { [ c, C, 0x1001689 ] }; 
 key <AB04> { [ v, V, 0x100168D ] }; 
 key <AB05> { [ b, B, 0x1001681 ] }; 
 key <AB06> { [ n, N, 0x1001685 ] }; 
 key <AB07> { [ m, M, 0x100168B ] }; 

 
 
 
 key <AB08> { [ comma, less, 0x100169C ] }; 
 key <AB09> { [ period, greater, 0x100169B ] }; 
 key <AB10> { [ slash, question, 0x1001680 ] }; 

 
 
 

 key <CAPS> { type[Group1] = "ONE_LEVEL", [ ISO_Level3_Lock ] };

 
 include "level3(ralt_switch)"

 
 
 
 key <SCLK> {type[Group1] = "ONE_LEVEL", [ Shift_Lock ] };
 modifier_map Shift { Shift_Lock };

 include "compose(rwin)"
};
