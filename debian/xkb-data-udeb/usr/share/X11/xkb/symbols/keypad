partial hidden keypad_keys
xkb_symbols "overlay" {
 include "keypad(overlay1)"
};

partial hidden keypad_keys
xkb_symbols "overlay1" {

 key <KP7> { [ KP_Home ], overlay1=<KO7> };
 key <KP8> { [ KP_Up ], overlay1=<KO8> };
 key <KP9> { [ KP_Prior ], overlay1=<KO9> };

 key <KP4> { [ KP_Left ], overlay1=<KO4> };
 key <KP5> { [ KP_Begin ], overlay1=<KO5> };
 key <KP6> { [ KP_Right ], overlay1=<KO6> };

 key <KP1> { [ KP_End ], overlay1=<KO1> };
 key <KP2> { [ KP_Down ], overlay1=<KO2> };
 key <KP3> { [ KP_Next ], overlay1=<KO3> };

 key <KP0> { [ KP_Insert ], overlay1=<KO0> };
 key <KPDL> { [ KP_Delete ], overlay1=<KODL> };

 key <KO7> { [ KP_7 ] };
 key <KO8> { [ KP_8 ] };
 key <KO9> { [ KP_9 ] };

 key <KO4> { [ KP_4 ] };
 key <KO5> { [ KP_5 ] };
 key <KO6> { [ KP_6 ] };

 key <KO1> { [ KP_1 ] };
 key <KO2> { [ KP_2 ] };
 key <KO3> { [ KP_3 ] };

 key <KO0> { [ KP_0 ] };
 key <KODL> { [ KP_Decimal ] };
};

partial hidden keypad_keys
xkb_symbols "overlay2" {

 key <KP7> { [ KP_Home ], overlay2=<KO7> };
 key <KP8> { [ KP_Up ], overlay2=<KO8> };
 key <KP9> { [ KP_Prior ], overlay2=<KO9> };

 key <KP4> { [ KP_Left ], overlay2=<KO4> };
 key <KP5> { [ KP_Begin ], overlay2=<KO5> };
 key <KP6> { [ KP_Right ], overlay2=<KO6> };

 key <KP1> { [ KP_End ], overlay2=<KO1> };
 key <KP2> { [ KP_Down ], overlay2=<KO2> };
 key <KP3> { [ KP_Next ], overlay2=<KO3> };

 key <KP0> { [ KP_Insert ], overlay2=<KO0> };
 key <KPDL> { [ KP_Delete ], overlay2=<KODL> };

 key <KO7> { [ KP_7 ] };
 key <KO8> { [ KP_8 ] };
 key <KO9> { [ KP_9 ] };

 key <KO4> { [ KP_4 ] };
 key <KO5> { [ KP_5 ] };
 key <KO6> { [ KP_6 ] };

 key <KO1> { [ KP_1 ] };
 key <KO2> { [ KP_2 ] };
 key <KO3> { [ KP_3 ] };

 key <KO0> { [ KP_0 ] };
 key <KODL> { [ KP_Decimal ] };
};

partial hidden keypad_keys
xkb_symbols "operators" {
 
 
 key <KPDV> {
 type="CTRL+ALT", 
 symbols[Group1]= [ KP_Divide, KP_Divide, KP_Divide, KP_Divide, XF86_Ungrab ]
 };
 key <KPMU> {
 type="CTRL+ALT", 
 symbols[Group1]= [ KP_Multiply, KP_Multiply, KP_Multiply, KP_Multiply, XF86_ClearGrab ]
 };
 key <KPSU> {
 type="CTRL+ALT", 
 symbols[Group1]= [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86_Prev_VMode ]
 };
 key <KPAD> {
 type="CTRL+ALT", 
 symbols[Group1]= [ KP_Add, KP_Add, KP_Add, KP_Add, XF86_Next_VMode ]
 };
};

default partial hidden keypad_keys
xkb_symbols "x11" {

 include "keypad(operators)"

 key <KP7> { [ KP_Home, KP_7 ] };
 key <KP8> { [ KP_Up, KP_8 ] };
 key <KP9> { [ KP_Prior, KP_9 ] };

 key <KP4> { [ KP_Left, KP_4 ] };
 key <KP5> { [ KP_Begin, KP_5 ] };
 key <KP6> { [ KP_Right, KP_6 ] };

 key <KP1> { [ KP_End, KP_1 ] };
 key <KP2> { [ KP_Down, KP_2 ] };
 key <KP3> { [ KP_Next, KP_3 ] };
 key <KPEN> { [ KP_Enter ] };
 key <KPEQ> { [ KP_Equal ] };

 key <KP0> { [ KP_Insert, KP_0 ] };
 key <KPDL> { [ KP_Delete, KP_Decimal ] };
 key <KPPT> { [ KP_Decimal, KP_Decimal ] };
};




keypad_keys
xkb_symbols "legacy" {

 include "keypad(core)"
 include "keypad(legacymath)"
 include "keypad(legacynumber)"
 include "kpdl(dot)"
};




keypad_keys
xkb_symbols "legacy_wang" {

 include "keypad(core)"
 include "keypad(legacymath)"
 include "keypad(legacynumber_wang)"
 include "kpdl(dot)"
};




keypad_keys
xkb_symbols "oss" {

 include "keypad(core)"
 include "keypad(ossmath)"
 include "keypad(ossnumber)"
 include "kpdl(dotoss)"
};




keypad_keys
xkb_symbols "oss_latin9" {

 include "keypad(core)"
 include "keypad(ossmath_latin9)"
 include "keypad(legacynumber)"
 include "kpdl(dotoss_latin9)"
};




keypad_keys
xkb_symbols "oss_wang" {

 include "keypad(core)"
 include "keypad(ossmath)"
 include "keypad(ossnumber_wang)"
 include "kpdl(dotoss)"
};





keypad_keys
xkb_symbols "future" {

 include "keypad(core)"
 include "keypad(futuremath)"
 include "keypad(ossnumber)"
 include "kpdl(commaoss)"
};





keypad_keys
xkb_symbols "future_wang" {

 include "keypad(core)"
 include "keypad(futuremath)"
 include "keypad(ossnumber_wang)"
 include "kpdl(commaoss)"
};




partial keypad_keys
xkb_symbols "core" {

 modifier_map Mod2 { Num_Lock };

 key <NMLK> { [ Num_Lock ] };
 key <KPEN> { [ KP_Enter ] };
 key <KPEQ> { [ KP_Equal ] };
};















partial keypad_keys
xkb_symbols "legacymath" {

 key.type[Group1]="CTRL+ALT" ;

 key <KPDV> { [ KP_Divide, KP_Divide, KP_Divide, KP_Divide, XF86_Ungrab ] }; 
 key <KPMU> { [ KP_Multiply, KP_Multiply, KP_Multiply, KP_Multiply, XF86_ClearGrab ] }; 
 key <KPSU> { [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86_Prev_VMode ] }; 

 key <KPAD> { [ KP_Add, KP_Add, KP_Add, KP_Add, XF86_Next_VMode ] }; 
};















partial keypad_keys
xkb_symbols "ossmath" {

 key.type[Group1]="CTRL+ALT" ;

 key <KPDV> { [ KP_Divide, 0x1002215, 0x10000F7, VoidSymbol, XF86_Ungrab ] }; 
 key <KPMU> { [ KP_Multiply, 0x10022C5, 0x10000D7, VoidSymbol, XF86_ClearGrab ] }; 
 key <KPSU> { [ KP_Subtract, 0x1002212, 0x1002212, VoidSymbol, XF86_Prev_VMode ] }; 

 key <KPAD> { [ KP_Add, 0x100002B, 0x100002B, VoidSymbol, XF86_Next_VMode ] }; 
};
















partial keypad_keys
xkb_symbols "futuremath" {

 key.type[Group1]="FOUR_LEVEL_X" ;

 key <KPDV> { [ 0x1002215, KP_Divide, 0x10000F7, XF86_Ungrab ] }; 
 key <KPMU> { [ 0x10022C5, KP_Multiply, 0x10000D7, XF86_ClearGrab ] }; 
 key <KPSU> { [ 0x1002212, KP_Subtract, 0x1002212, XF86_Prev_VMode ] }; 

 key <KPAD> { [ 0x100002B, KP_Add, 0x100002B, XF86_Next_VMode ] }; 
};















partial keypad_keys
xkb_symbols "ossmath_latin9" {

 key.type[Group1]="FOUR_LEVEL_X";

 key <KPDV> { [ KP_Divide, slash, division, XF86_Ungrab ] }; 
 key <KPMU> { [ KP_Multiply, periodcentered, multiply, XF86_ClearGrab ] }; 
 key <KPSU> { [ KP_Subtract, minus, minus, XF86_Prev_VMode ] }; 

 key <KPAD> { [ KP_Add, plus, plus, XF86_Next_VMode ] }; 
};





















partial keypad_keys
xkb_symbols "legacynumber" {

 key.type[Group1]="KEYPAD" ;

 key <KP7> { [ KP_Home, KP_7 ] }; 
 key <KP8> { [ KP_Up, KP_8 ] }; 
 key <KP9> { [ KP_Prior, KP_9 ] }; 

 key <KP4> { [ KP_Left, KP_4 ] }; 
 key <KP5> { [ KP_Begin, KP_5 ] }; 
 key <KP6> { [ KP_Right, KP_6 ] }; 

 key <KP1> { [ KP_End, KP_1 ] }; 
 key <KP2> { [ KP_Down, KP_2 ] }; 
 key <KP3> { [ KP_Next, KP_3 ] }; 

 key <KP0> { [ KP_Insert, KP_0 ] }; 
};























partial keypad_keys
xkb_symbols "legacynumber_wang" {

 key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

 key <KP7> { [ KP_Home, KP_7, less ] }; 
 key <KP8> { [ KP_Up, KP_8, greater ] }; 
 key <KP9> { [ KP_Prior, KP_9, asciicircum ] }; 

 key <KP4> { [ KP_Left, KP_4, bracketleft ] }; 
 key <KP5> { [ KP_Begin, KP_5, bracketright ] }; 
 key <KP6> { [ KP_Right, KP_6, dollar ] }; 

 key <KP1> { [ KP_End, KP_1, ampersand ] }; 
 key <KP2> { [ KP_Down, KP_2, at ] }; 
 key <KP3> { [ KP_Next, KP_3, numbersign ] }; 

 key <KP0> { [ KP_Insert, KP_0, apostrophe ] }; 
};





















partial keypad_keys
xkb_symbols "ossnumber" {

 key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

 key <KP7> { [ KP_Home, KP_7, 0x1002196, 0x10021D6 ] }; 
 key <KP8> { [ KP_Up, KP_8, 0x1002191, 0x10021D1 ] }; 
 key <KP9> { [ KP_Prior, KP_9, 0x1002197, 0x10021D7 ] }; 

 key <KP4> { [ KP_Left, KP_4, 0x1002190, 0x10021D0 ] }; 
 key <KP5> { [ KP_Begin, KP_5, 0x1002194, 0x10021D4 ] }; 
 key <KP6> { [ KP_Right, KP_6, 0x1002192, 0x10021D2 ] }; 

 key <KP1> { [ KP_End, KP_1, 0x1002199, 0x10021D9 ] }; 
 key <KP2> { [ KP_Down, KP_2, 0x1002193, 0x10021D3 ] }; 
 key <KP3> { [ KP_Next, KP_3, 0x1002198, 0x10021D8 ] }; 

 key <KP0> { [ KP_Insert, KP_0, 0x1002195, 0x10021D5 ] }; 
};





















partial keypad_keys
xkb_symbols "ossnumber_wang" {

 key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

 key <KP7> { [ KP_Home, KP_7, less, 0x1002196 ] }; 
 key <KP8> { [ KP_Up, KP_8, greater, 0x1002191 ] }; 
 key <KP9> { [ KP_Prior, KP_9, asciicircum, 0x1002197 ] }; 

 key <KP4> { [ KP_Left, KP_4, bracketleft, 0x1002190 ] }; 
 key <KP5> { [ KP_Begin, KP_5, bracketright, 0x1002194 ] }; 
 key <KP6> { [ KP_Right, KP_6, dollar, 0x1002192 ] }; 

 key <KP1> { [ KP_End, KP_1, ampersand, 0x1002199 ] }; 
 key <KP2> { [ KP_Down, KP_2, at, 0x1002193 ] }; 
 key <KP3> { [ KP_Next, KP_3, numbersign, 0x1002198 ] }; 

 key <KP0> { [ KP_Insert, KP_0, apostrophe, 0x1002195 ] }; 
};













partial keypad_keys
xkb_symbols "ops" {
 key <KPDV> { [ NoSymbol, slash, NoSymbol, XF86_Ungrab ] };
 key <KPMU> { [ NoSymbol, asterisk, NoSymbol, XF86_ClearGrab ] };
 key <KPSU> { [ NoSymbol, minus, NoSymbol, XF86_Prev_VMode ] };
 key <KPAD> { [ NoSymbol, plus, NoSymbol, XF86_Next_VMode ] };
 key <KPEQ> { [ NoSymbol, equal ] };
};















partial keypad_keys
xkb_symbols "hex" {
 key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

 
 
 key <KPDV> { [ NoSymbol, NoSymbol, parenleft ] };
 key <KPMU> { [ NoSymbol, NoSymbol, parenright ] };
 key <KPSU> { [ NoSymbol, NoSymbol, dollar ] };

 
 key <KP7> { [ NoSymbol, NoSymbol, a ] };
 key <KP8> { [ NoSymbol, NoSymbol, b ] };
 key <KP9> { [ NoSymbol, NoSymbol, c ] };

 
 key <KP4> { [ NoSymbol, NoSymbol, d ] };
 key <KP5> { [ NoSymbol, NoSymbol, e ] };
 key <KP6> { [ NoSymbol, NoSymbol, f ] };
 key <KPAD> { [ NoSymbol, NoSymbol, comma ] };

 
 key <KP1> { [ NoSymbol, NoSymbol, equal ] };
 key <KP2> { [ NoSymbol, NoSymbol, x ] };
 key <KP3> { [ NoSymbol, NoSymbol, colon ] };

 
 key <KP0> { [ NoSymbol, NoSymbol, backslash ] };
};








partial keypad_keys
xkb_symbols "atm" {
 
 key <KP7> { [ NoSymbol, KP_1 ] };
 key <KP8> { [ NoSymbol, KP_2 ] };
 key <KP9> { [ NoSymbol, KP_3 ] };

 
 key <KP1> { [ NoSymbol, KP_7 ] };
 key <KP2> { [ NoSymbol, KP_8 ] };
 key <KP3> { [ NoSymbol, KP_9 ] };
};


partial modifier_keys
xkb_symbols "pointerkeys" {
 key <NMLK> { [ Num_Lock, Pointer_EnableKeys ] };
};













partial keypad_keys
xkb_symbols "numoperdecsep" {
 key <KO7> { [ KP_7 ] };
 key <KO8> { [ KP_8 ] };
 key <KO9> { [ KP_9 ] };

 key <KOMU> {
 type="CTRL+ALT",
 symbols[Group1]= [ KP_Multiply, KP_Multiply, KP_Multiply, KP_Multiply, XF86_ClearGrab ]
 };

 key <KO4> { [ KP_4 ] };
 key <KO5> { [ KP_5 ] };
 key <KO6> { [ KP_6 ] };

 key <KOSU> {
 type="CTRL+ALT",
 symbols[Group1]= [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86_Prev_VMode ]
 };

 key <KO1> { [ KP_1 ] };
 key <KO2> { [ KP_2 ] };
 key <KO3> { [ KP_3 ] };

 key <KOAD> {
 type="CTRL+ALT",
 symbols[Group1]= [ KP_Add, KP_Add, KP_Add, KP_Add, XF86_Next_VMode ]
 };

 key <KO0> { [ KP_0 ] };
 key <KODL> { [ KP_Decimal ] };

 key <KODV> {
 type="CTRL+ALT",
 symbols[Group1]= [ KP_Divide, KP_Divide, KP_Divide, KP_Divide, XF86_Ungrab ]
 };
};
