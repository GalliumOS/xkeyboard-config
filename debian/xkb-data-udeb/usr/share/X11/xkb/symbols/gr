








default partial alphanumeric_keys alternate_group
xkb_symbols "basic" {
 include "gr(simple)"

 name[Group1] = "Greek";

 include "eurosign(e)"
 include "eurosign(5)"
 include "kpdl(comma)"
 include "level3(ralt_switch)"

 key <AB01> { [ NoSymbol, NoSymbol, U037D, U03FF ] };
 key <AB02> { [ NoSymbol, NoSymbol, rightarrow, leftarrow ] };
 key <AB03> { [ NoSymbol, NoSymbol, copyright ] };
 key <AB04> { [ NoSymbol, NoSymbol, U03D6 ] };
 key <AB05> { [ NoSymbol, NoSymbol, U03D0 ] };
 key <AB06> { [ NoSymbol, NoSymbol, U0374, U0375 ] };
 key <AB07> { [ NoSymbol, NoSymbol, U03FB, U03FA ] };
 key <AB08> { [ NoSymbol, NoSymbol, guillemotleft ] };
 key <AB09> { [ NoSymbol, NoSymbol, guillemotright, periodcentered ] };
 key <AC03> { [ NoSymbol, NoSymbol, downarrow, uparrow ] };
 key <AC04> { [ NoSymbol, NoSymbol, U03D5 ] };
 key <AC05> { [ NoSymbol, NoSymbol, U03DD, U03DC ] };
 key <AC07> { [ NoSymbol, NoSymbol, U037C, U03FE ] };
 key <AC08> { [ NoSymbol, NoSymbol, U03DF, U03DE ] };
 key <AC09> { [ NoSymbol, NoSymbol, U03F2, U03F9 ] };
 key <AC10> { [ NoSymbol, NoSymbol, dead_acute, dead_psili ] };
 key <AC11> { [ NoSymbol, NoSymbol, dead_grave, dead_dasia ] };
 key <AD01> { [ NoSymbol, NoSymbol, periodcentered ] };
 key <AD02> { [ NoSymbol, NoSymbol, U03DB, U03DA ] };
 key <AD04> { [ NoSymbol, NoSymbol, registered, U03F1 ] };
 key <AD07> { [ NoSymbol, NoSymbol, U03D1, U03F4 ] };
 key <AD08> { [ NoSymbol, NoSymbol, U037B, U03FD ] };
 key <AD10> { [ NoSymbol, NoSymbol, U03E1, U03E0 ] };
 key <AD11> { [ NoSymbol, NoSymbol, dead_tilde, dead_macron ] };
 key <AD12> { [ NoSymbol, NoSymbol, dead_iota, dead_breve ] };
 key <AE01> { [ NoSymbol, NoSymbol, NoSymbol, onesuperior ] };
 key <AE02> { [ NoSymbol, NoSymbol, onehalf, twosuperior ] };
 key <AE03> { [ NoSymbol, NoSymbol, sterling, threesuperior ] };
 key <AE04> { [ NoSymbol, NoSymbol, onequarter, threequarters ] };
 key <AE07> { [ NoSymbol, NoSymbol, U03F0 ] };
 key <AE10> { [ NoSymbol, NoSymbol, degree ] };
};

partial alphanumeric_keys alternate_group
xkb_symbols "simple" {

 include "gr(bare)"

 name[Group1] = "Greek (simple)";

 key <TLDE> { [ grave, asciitilde ] }; 
 key <AE01> { [ 1, exclam ] }; 
 key <AE02> { [ 2, at ] }; 
 key <AE03> { [ 3, numbersign ] }; 
 key <AE04> { [ 4, dollar ] }; 
 key <AE05> { [ 5, percent ] }; 
 key <AE06> { [ 6, asciicircum ] }; 
 key <AE07> { [ 7, ampersand ] }; 
 key <AE08> { [ 8, asterisk ] }; 
 key <AE09> { [ 9, parenleft ] }; 
 key <AE10> { [ 0, parenright ] }; 
 key <AE11> { [ minus, underscore ] }; 
 key <AE12> { [ equal, plus ] }; 

 key <AD11> { [ bracketleft, braceleft ] }; 
 key <AD12> { [ bracketright, braceright ] }; 

 key <AC11> { [ apostrophe, quotedbl ] }; 

 key <AB08> { [ comma, less ] }; 
 key <AB09> { [ period, greater ] }; 
 key <AB10> { [ slash, question ] }; 
 key <BKSL> { [ backslash, bar ] }; 

 include "kpdl(comma)"
};

hidden partial alphanumeric_keys alternate_group
xkb_symbols "bare" {

 key <AD01> { [ semicolon, colon ] }; 
 key <AD02> { [ Greek_finalsmallsigma, Greek_SIGMA ] }; 
 key <AD03> { [ Greek_epsilon, Greek_EPSILON ] }; 
 key <AD04> { [ Greek_rho, Greek_RHO ] }; 
 key <AD05> { [ Greek_tau, Greek_TAU ] }; 
 key <AD06> { [ Greek_upsilon, Greek_UPSILON ] }; 
 key <AD07> { [ Greek_theta, Greek_THETA ] }; 
 key <AD08> { [ Greek_iota, Greek_IOTA ] }; 
 key <AD09> { [ Greek_omicron, Greek_OMICRON ] }; 
 key <AD10> { [ Greek_pi, Greek_PI ] }; 

 key <AC01> { [ Greek_alpha, Greek_ALPHA ] }; 
 key <AC02> { [ Greek_sigma, Greek_SIGMA ] }; 
 key <AC03> { [ Greek_delta, Greek_DELTA ] }; 
 key <AC04> { [ Greek_phi, Greek_PHI ] }; 
 key <AC05> { [ Greek_gamma, Greek_GAMMA ] }; 
 key <AC06> { [ Greek_eta, Greek_ETA ] }; 
 key <AC07> { [ Greek_xi, Greek_XI ] }; 
 key <AC08> { [ Greek_kappa, Greek_KAPPA ] }; 
 key <AC09> { [ Greek_lamda, Greek_LAMDA ] }; 
 key <AC10> { [ dead_acute, dead_diaeresis ] }; 

 key <AB01> { [ Greek_zeta, Greek_ZETA ] }; 
 key <AB02> { [ Greek_chi, Greek_CHI ] }; 
 key <AB03> { [ Greek_psi, Greek_PSI ] }; 
 key <AB04> { [ Greek_omega, Greek_OMEGA ] }; 
 key <AB05> { [ Greek_beta, Greek_BETA ] }; 
 key <AB06> { [ Greek_nu, Greek_NU ] }; 
 key <AB07> { [ Greek_mu, Greek_MU ] }; 

 key <LSGT> { [ guillemotleft, guillemotright ] }; 
};






















partial alphanumeric_keys alternate_group
xkb_symbols "extended" {

 include "gr(simple)"

 name[Group1] = "Greek (extended)";

 key.type[Group1] = "THREE_LEVEL";

 key <AE03> { [ NoSymbol, NoSymbol, sterling ] }; 
 key <AE10> { [ NoSymbol, NoSymbol, degree ] }; 
 key <AE11> { [ NoSymbol, NoSymbol, plusminus ] }; 

 key <AD01> { [ NoSymbol, NoSymbol, periodcentered ] }; 
 key <AD04> { [ NoSymbol, NoSymbol, registered ] }; 

 key <AB03> { [ NoSymbol, NoSymbol, copyright ] }; 
 key <AB08> { [ NoSymbol, NoSymbol, guillemotleft ] }; 
 key <AB09> { [ NoSymbol, NoSymbol, guillemotright ] }; 

 include "level3(ralt_switch)"
 include "eurosign(5)"
 include "eurosign(e)"
};

partial alphanumeric_keys alternate_group
xkb_symbols "polytonic" {

 include "gr(extended)"

 name[Group1] = "Greek (polytonic)";

 key.type[Group1] = "THREE_LEVEL";

 key <AD11> { [ dead_tilde, dead_diaeresis, dead_macron ] }; 
 key <AD12> { [ dead_iota, VoidSymbol, dead_breve ] }; 

 key <AC10> { [ dead_acute, dead_psili ] }; 
 key <AC11> { type[Group1]="FOUR_LEVEL",
 [ dead_grave, dead_dasia, apostrophe, quotedbl ] };
 
};

partial alphanumeric_keys alternate_group
xkb_symbols "nodeadkeys" {

 include "gr(simple)"

 name[Group1] = "Greek (eliminate dead keys)";

 key <AC10> { [ semicolon, colon ] }; 
};



partial alphanumeric_keys
 xkb_symbols "sun_type6" {
 include "sun_vndr/gr(sun_type6)"
};
