



partial modifier_keys
xkb_symbols "rctrl_switch" {
 key <RCTL> {
 type[Group1]="ONE_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift ]
 };
 include "level5(modifier_mapping)"
};


partial modifier_keys
xkb_symbols "lsgt_switch" {
 key <LSGT> {
 type[Group1]="ONE_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift ]
 };
 include "level5(modifier_mapping)"
};


partial modifier_keys
xkb_symbols "ralt_switch" {
 key <RALT> {
 type[Group1]="ONE_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift ]
 };
 include "level5(modifier_mapping)"
};


partial modifier_keys
xkb_symbols "modifier_mapping" {
 replace key <MDSW> {
 type[Group1] = "ONE_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift ]
 };
 modifier_map Mod3 { <MDSW> };
};






partial modifier_keys
xkb_symbols "lock" {
 key.type[Group1] = "ONE_LEVEL";
 include "level5(modifier_mapping)"
 replace key <HYPR> {
 vmods = NumLock,
 symbols[Group1] = [ NoSymbol ],
 actions[Group1] = [ SetMods(modifiers=NumLock) ]
 };
 modifier_map Mod2 { <HYPR> };
};




partial modifier_keys
xkb_symbols "lsgt_switch_lock" {
 include "level5(lock)"
 key <LSGT> {
 type[Group1] = "EIGHT_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};

partial modifier_keys
xkb_symbols "lwin_switch_lock" {
 include "level5(lock)"
 key <LWIN> {
 type[Group1] = "EIGHT_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};

partial modifier_keys
xkb_symbols "ralt_switch_lock" {
 include "level5(lock)"
 key <RALT> {
 type[Group1] = "EIGHT_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};

partial modifier_keys
xkb_symbols "rwin_switch_lock" {
 include "level5(lock)"
 key <RWIN> {
 type[Group1] = "EIGHT_LEVEL",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};

partial modifier_keys
xkb_symbols "lsgt_switch_lock_cancel" {
 include "level5(lock)"
 key <LSGT> {
 type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};

partial modifier_keys
xkb_symbols "lwin_switch_lock_cancel" {
 include "level5(lock)"
 key <LWIN> {
 type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};

partial modifier_keys
xkb_symbols "ralt_switch_lock_cancel" {
 include "level5(lock)"
 key <RALT> {
 type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};

partial modifier_keys
xkb_symbols "rwin_switch_lock_cancel" {
 include "level5(lock)"
 key <RWIN> {
 type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
 symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
 ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
 };
};
